<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.dao.AssistantMapper">
    <resultMap id="BaseResultMap" type="com.ssm.entity.Assistant">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="ano" property="ano" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="major_id" property="majorId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, ano, name, password, major_id
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ssm.entity.AssistantExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from assistant
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from assistant
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM assistant
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.ssm.entity.AssistantExample">
        delete from assistant
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ssm.entity.Assistant">
        INSERT INTO assistant (id, ano, name,
                               password, major_id)
        VALUES (#{id,jdbcType=INTEGER}, #{ano,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR}, #{majorId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ssm.entity.Assistant">
        insert into assistant
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="ano != null">
                ano,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="majorId != null">
                major_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="ano != null">
                #{ano,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="majorId != null">
                #{majorId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ssm.entity.AssistantExample" resultType="java.lang.Integer">
        select count(*) from assistant
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update assistant
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.ano != null">
                ano = #{record.ano,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.majorId != null">
                major_id = #{record.majorId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update assistant
        set id = #{record.id,jdbcType=INTEGER},
        ano = #{record.ano,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        major_id = #{record.majorId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ssm.entity.Assistant">
        update assistant
        <set>
            <if test="ano != null">
                ano = #{ano,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="majorId != null">
                major_id = #{majorId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ssm.entity.Assistant">
        UPDATE assistant
        SET ano      = #{ano,jdbcType=INTEGER},
            name     = #{name,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            major_id = #{majorId,jdbcType=INTEGER}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <!--<select id="selectLeaveBySno" parameterType="java.lang.Integer" resultType="com.ssm.entity.Leave">-->
        <!--SELECT *-->
        <!--FROM leaveoline.leave-->
        <!--WHERE student_id = #{student_id} AND state = "已销假"-->
    <!--</select>-->

    <!--<select id="selectOneBySno" resultType="com.ssm.entity.Leave">-->
    <!--SELECT *-->
    <!--FROM leaveoline.leave-->
    <!--WHERE student_id = #{student_id} AND state = "待审批"-->
    <!--</select>-->

    <!--<select id="selectOneBySno" resultType="com.ssm.entity.Leave" parameterType="integer">-->
        <!--SELECT-->
            <!--*,-->
            <!--student.sname-->
        <!--FROM leaveoline.leave, leaveoline.student-->
        <!--WHERE leave.student_id = student.id AND leave.state = "待审批" AND leave.student_id = #{student_id}-->
    <!--</select>-->

    <!--<select id="getAll" resultType="com.ssm.entity.Leave">-->
        <!--SELECT *-->
        <!--FROM leaveoline.leave-->
        <!--WHERE state = "请假中"-->
    <!--</select>-->

    <select id="selectNameBySid" parameterType="integer" resultType="com.ssm.entity.Assistant">
        SELECT assistant.`name`
        FROM leaveoline.major, leaveoline.student, leaveoline.assistant
        WHERE student.id = major.id AND assistant.id = major.assistant_id AND student.id = #{student_id}
    </select>
</mapper>